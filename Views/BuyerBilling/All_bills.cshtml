@model IEnumerable<Moksha_App.Models.B_Bill>
@{
    ViewData["Title"] = "All_bills";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid vh-100 d-flex flex-column p-0">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center p-3 bg-light rounded-0 shadow-sm">
        <div class="d-flex align-items-center">
            <i class="bi bi-receipt-cutoff text-primary fs-3 me-3"></i>
            <h2 class="text-primary fw-semibold mb-0 fs-3">Buying Billing</h2>
        </div>
        <button class="btn btn-gradient btn-lg d-flex align-items-center shadow-sm transition-all"
                data-bs-toggle="modal"
                data-bs-target="#addBillModal"
                style="transition: all 0.2s;">
            <i class="bi bi-plus-circle me-2 fs-5"></i>
            <span>Add Bill</span>
        </button>
    </div>

    <!-- Bills Table -->
    <div class="table-responsive shadow-sm rounded-0 flex-grow-1" style="overflow-y: auto;">
        <table class="table table-bordered table-hover align-middle text-center mb-0">
            <thead class="table-light sticky-top">
                <tr>
                    <th class="text-nowrap">#</th>
                    <th class="text-nowrap">Buyer Name</th>
                    <th class="text-nowrap">Total Amount</th>
                    <th class="text-nowrap">Payment Method</th>
                    <th class="text-nowrap">Date</th>
                    <th class="text-nowrap">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    int bill_no = 1;
                    foreach (var bill in Model)
                    {
                        <tr class="transition-all">
                            <td>@bill_no</td>
                            
                            <td>@bill.BuyerName</td>
                            <td class="text-success fw-bold">
                                @string.Format(new System.Globalization.CultureInfo("hi-IN"), "{0:C}", bill.TotalBillPrice)
                            </td>
                            <td>@bill.PaymentMethod</td>
                            <td>@bill.CreatedAt.ToString("yyyy-MM-dd")</td>
                            <td>
                                <div class="d-flex justify-content-center gap-2">
                                    <button class="btn btn-warning btn-sm edit-bill-btn d-flex align-items-center"
                                            data-id="@bill.B_Id"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editBillModal"
                                            title="Edit Bill"
                                           >
                                        <i class="bi bi-pencil-square me-1"></i>
                                        <span class="d-none d-md-inline">Edit</span>
                                    </button>
                                    <button class="btn btn-danger btn-sm delete-bill-btn d-flex align-items-center"
                                            data-id="@bill.B_Id"
                                            title="Delete Bill">
                                        <i class="bi bi-trash me-1"></i>
                                        <span class="d-none d-md-inline">Delete</span>
                                    </button>
                                    <button class="btn btn-primary btn-sm print-bill-btn d-flex align-items-center"
                                            data-id="@bill.B_Id"
                                            title="Print Bill"
                                            onclick="P_bill(this.dataset.id)">
                                        <i class="bi bi-printer me-1"></i>
                                        <span class="d-none d-md-inline">Print</span>
                                    </button>

                                </div>
                            </td>
                        </tr>
                        bill_no++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center text-muted py-4">
                            <i class="bi bi-file-earmark-excel fs-4"></i>
                            <p class="mb-0 mt-2">No bills found. Click "Add Bill" to create one.</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Add Bill Modal -->
<div class="modal fade" id="addBillModal" tabindex="-1" aria-labelledby="addBillModalLabel" data-bs-backdrop="static" >
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow-lg rounded-4 border-0">
            <!-- Modal Header -->
            <div class="modal-header bg-gradient-primary text-white rounded-top-4 position-relative py-4">
                <div class="w-100 text-center">
                    <h5 class="modal-title fw-bold d-flex align-items-center justify-content-center">
                        <i class="bi bi-receipt-cutoff me-2 fs-2"></i>
                        <span class="fs-3">Create New Buying Invoice</span>
                    </h5>
                </div>
                <button type="button" class="btn-close btn-close-white position-absolute end-0 me-3 top-50 translate-middle-y"
                        data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body p-4">
                <form id="addBillForm" class="needs-validation" novalidate method="post">
                    <div class="row g-4">
                        <!-- Buyer Name Section -->
                        <div class="col-12">
                            <div class="form-floating position-relative">
                                <input type="text"
                                       class="form-control form-control-lg shadow-sm rounded-3"
                                       id="buyerName"
                                       name="BuyerName"
                                       placeholder=""
                                       onkeyup="NameChange(this)"
                                       required
                                       autocomplete="off">
                                <label for="buyerName" class="fw-semibold text-secondary ps-2">
                                    <i class="bi bi-person-badge me-2"></i>Customer Name
                                </label>
                                <div class="valid-feedback"> Looks good! </div>
                            </div>
                        </div>

                        <!-- Materials Section -->
                        <div class="col-12">
                            <div class="card border-0 shadow-sm hover-shadow" id="itemContainer">
                                <div class="card-header bg-transparent border-0 py-3">
                                    <h5 class="fw-semibold text-primary mb-0 d-flex align-items-center"> <i class="bi bi-pallet me-2 fs-5"></i>Materials </h5>
                                </div>
                                <div class="card-body p-3">
                                    <div id="materialsContainer" class="d-grid gap-3">
                                    </div>
                                    <button type="button"
                                            class="btn btn-outline-primary w-100 mt-3 py-3 rounded-3 add-material-btn"
                                            onclick="Additem();"
                                            id="addMaterialBtn">
                                        <i class="bi bi-plus-circle me-2"></i>Add Item
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Total Amount -->
                        <div class="col-12">
                            <div class="d-flex p-3 bg-light rounded-3 border">
                                <h5 class="fw-bold text-secondary mb-0 d-flex align-items-center">
                                    <i class="bi bi-calculator me-2 fs-4"></i>Total Amount
                                </h5>
                                <h3 id="totalAmount" class="text-success fw-bold mb-0">
                                    <span class="fs-4">₹</span><span id="totalValue">0.00</span>
                                </h3>
                            </div>
                        </div>

                        <!-- Payment Section -->
                        <div class="col-md-6">
                            <div class="form-floating position-relative">
                                <select class="form-select form-select-lg shadow-sm rounded-3"
                                        id="paymentMethod" name="PaymentMethod" required>
                                    <option value=0>💰 Cash</option>
                                    <option value=1>💳 Credit Card</option>
                                    <option value=2>🏦 Bank Transfer</option>
                                </select>
                                <label for="paymentMethod" class="fw-semibold text-secondary">
                                    <i class="bi bi-credit-card-2-back me-2"></i>Payment Method
                                </label>
                            </div>
                        </div>

                        <!-- Payment Status -->
                        <div class="d-flex p-3 bg-light rounded-3 border">
                            <input class="form-check custom-large-checkbox"
                                   type="checkbox"
                                   id="isPaid"
                                   name="IsPaid"
                                   required>
                            <label class="form-check" for="isPaid">
                                <i class="bi bi-receipt me-2"></i>Mark as Paid
                            </label>
                            <div class="invalid-feedback" style=" max-width: 40%; margin-left: 30px;">
                                Please confirm payment status
                            </div>
                        </div>

                    </div>
                    <!-- Modal Footer -->
                    <div class="modal-footer mt-4 px-0 pb-0">
                        <div class="w-100 d-flex justify-content-between border-top pt-4">
                            <button type="button"
                                    class="btn btn-lg btn-outline-secondary rounded-pill px-4 shadow-sm d-flex align-items-center"
                                    data-bs-dismiss="modal">
                                <i class="bi bi-x-lg me-2"></i>Cancel
                            </button>
                            <button type="submit"
                                    id="createInvoiceBtn"
                                    class="btn btn-lg btn-primary rounded-pill px-4 shadow-sm d-flex align-items-center"
                                    disabled>
                                <i class="bi bi-file-earmark-check me-2"></i>Create Invoice
                            </button>
                        </div>
                    </div>
                </form>
            </div>
          
        </div>
    </div>
</div>

<!-- Edit Bill Modal -->
<div class="modal fade" id="editBillModal" tabindex="-1" aria-labelledby="editBillModalLabel" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow-lg rounded-4 border-0">
            <!-- Modal Header -->
            <div class="modal-header bg-gradient-teal text-white rounded-top-4 position-relative py-4">
                <div class="w-100 text-center">
                    <h5 class="modal-title fw-bold d-flex align-items-center justify-content-center">
                        <i class="bi bi-receipt-cutoff me-2 fs-2"></i>
                        <span class="fs-3">Edit Buying Invoice</span>
                    </h5>
                </div>
                <button type="button" class="btn-close btn-close-white position-absolute end-0 me-3 top-50 translate-middle-y"
                        data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body p-4">
                <form id="editBillForm" class="needs-validation" novalidate method="post">
                    <div class="row g-4">
                        <!-- Buyer Name Section -->
                        <div class="col-12">
                            <div class="form-floating position-relative">
                                <input type="text"
                                       class="form-control form-control-lg shadow-sm rounded-3"
                                       id="ebuyerName"
                                       name="BuyerName"
                                       placeholder=""
                                       onkeyup="NameChange(this)"
                                       required
                                       autocomplete="off">
                                <label for="ebuyerName" class="fw-semibold text-secondary ps-2">
                                    <i class="bi bi-person-badge me-2"></i>Customer Name
                                </label>
                                <div class="valid-feedback"> Looks good! </div>
                            </div>
                        </div>

                        <!-- Materials Section -->
                        <div class="col-12">
                            <div class="card border-0 shadow-sm hover-shadow" id="eitemContainer">
                                <div class="card-header bg-transparent border-0 py-3">
                                    <h5 class="fw-semibold text-primary mb-0 d-flex align-items-center"> <i class="bi bi-pallet me-2 fs-5"></i>Materials </h5>
                                </div>
                                <div class="card-body p-3">
                                    <div id="editMaterialsContainer" class="d-grid gap-3">
                                    </div>
                                    <button type="button"
                                            class="btn btn-outline-primary w-100 mt-3 py-3 rounded-3 edit-material-btn"
                                            onclick="EditItem();"
                                            id="editMaterialBtn">
                                        <i class="bi bi-plus-circle me-2"></i>Edit Item
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Total Amount -->
                        <div class="col-12">
                            <div class="d-flex p-3 bg-light rounded-3 border">
                                <h5 class="fw-bold text-secondary mb-0 d-flex align-items-center">
                                    <i class="bi bi-calculator me-2 fs-4"></i>Total Amount
                                </h5>
                                <h3 id="editTotalAmount" class="text-success fw-bold mb-0">
                                    <span class="fs-4">₹</span><span id="editTotalValue">0.00</span>
                                </h3>
                            </div>
                        </div>

                        <!-- Payment Section -->
                        <div class="col-md-6">
                            <div class="form-floating position-relative">
                                <select class="form-select form-select-lg shadow-sm rounded-3"
                                        id="editPaymentMethod" name="PaymentMethod" required>
                                    <option value=0>💰 Cash</option>
                                    <option value=1>💳 Credit Card</option>
                                    <option value=2>🏦 Bank Transfer</option>
                                </select>
                                <label for="editPaymentMethod" class="fw-semibold text-secondary">
                                    <i class="bi bi-credit-card-2-back me-2"></i>Payment Method
                                </label>
                            </div>
                        </div>

                        <!-- Payment Status -->
                        <div class="d-flex p-3 bg-light rounded-3 border">
                            <input class="form-check custom-large-checkbox"
                                   type="checkbox"
                                   id="editIsPaid"
                                   name="IsPaid"
                                   required>
                            <label class="form-check" for="editIsPaid">
                                <i class="bi bi-receipt me-2"></i>Mark as Paid
                            </label>
                            <div class="invalid-feedback" style=" max-width: 40%; margin-left: 30px;">
                                Please confirm payment status
                            </div>
                        </div>

                    </div>
                    <!-- Modal Footer -->
                    <div class="modal-footer mt-4 px-0 pb-0">
                        <div class="w-100 d-flex justify-content-between border-top pt-4">
                            <button type="button"
                                    class="btn btn-lg btn-outline-secondary rounded-pill px-4 shadow-sm d-flex align-items-center"
                                    data-bs-dismiss="modal">
                                <i class="bi bi-x-lg me-2"></i>Cancel
                            </button>
                            <button type="submit"
                                    id="updateInvoiceBtn"
                                    class="btn btn-lg btn-primary rounded-pill px-4 shadow-sm d-flex align-items-center"
                                    disabled>
                                <i class="bi bi-file-earmark-check me-2"></i>Update Invoice
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="~/css/Bills.css">
<!-- Include math.js for safe expression evaluation -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/12.0.0/math.min.js"></script>
<script src="~/js/site.js"></script>
@section scripts{
           <script>

        $(document).ready(function() {

             document.body.appendChild(globalAlertContainer);
              toggleSubmitButtonState();


            // 1. Load materials data
            let materials = [];

            $.ajax({
                url: '@Url.Action("All_Mt", "Materials")',
                type: "GET",
                success: function(response) {
                    if (response.success && response.message) {
                        materials = response.message;
                        console.log("Materials loaded:", materials.length);
                    } else {
                        console.error("No data received");
                    }
                },
                error: function(xhr, status, error) {
                    console.error("AJAX error:", error);
                }
            });

           //2 validate and calulation
           window.Additem = function() {
            const $materialsContainer = $('#materialsContainer');
            const itemCount = $materialsContainer.find('.item-entry').length + 1;

            const $newItem = $(`
                <div class="item-entry d-flex align-items-center gap-3 mb-3" id="item-${itemCount}" data-valid="false">
                    <div class="material-item mb-2 p-3 border rounded needs-validation" novalidate>
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h6 class="fw-semibold text-primary mb-0 d-flex align-items-center">
                                <i class="bi bi-pallet me-2 fs-5"></i>Items
                                <span class="badge bg-primary ms-2">${itemCount}</span>
                            </h6>
                            <button type="button" class="btn btn-outline-danger delete-item-btn">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </div>
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Select Item</label>
                                <select class="form-select item-dropdown is-validatable" id="dropdown-${itemCount}" required>
                                    <option value="">Select Item</option>
                                </select>
                                <div class="invalid-feedback">Please select an item</div>
                                <div class="valid-feedback d-none">Looks good!</div>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Price</label>
                                <input type="text" class="form-control price-input calc-trigger" placeholder="Price" required>
                                <div class="invalid-feedback">Enter a valid price (≥ ₹0.01)</div>
                                <div class="valid-feedback d-none">Looks good!</div>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Quantity</label>
                                <input type="text" class="form-control quantity-input calc-trigger" placeholder="Quantity" required>
                                <div class="invalid-feedback ">Enter quantity (≥ 1)</div>
                                <div class="valid-feedback d-none">Looks good!</div>
                            </div>
                            <div class="col-md-2">
                               <label class="form-label">Total Quantity</label>
                               <div class="input-group-text text-truncate w-100" style="overflow: hidden;">
                               <span class="total-quantity">0.00</span>
                           </div>
                         </div>

                        <div class="col-md-2">
                          <label class="form-label">Total Price</label>
                          <div class="input-group-text text-truncate w-100" style="overflow: hidden;">
                          <span class="total-price">₹0.00</span>
                       </div>
                     </div>
                        </div>
                    </div>
                </div>
            `);

            $materialsContainer.append($newItem);

                    // 1. First modify the dropdown population to include the price in the option's data attribute
        const $dropdown = $newItem.find('.item-dropdown');
        $dropdown.empty().append('<option value="">Select a material</option>');
        materials.forEach(material => {
            $dropdown.append($('<option>', {
                value: material.id,
                text: `${material.colorName} - ₹${material.basePrice.toFixed(2)}`,
                'data-price': material.basePrice  // Add this line to store the price
            }));
        });

        // 2. Then update the change handler to extract and use this price
        $dropdown.on('change', function() {
            const $this = $(this);
            const $priceInput = $this.closest('.row').find('.price-input');
            const selectedOption = $this.find('option:selected');
            const selectedText = selectedOption.text();

            if (selectedOption.val()) {
                // Extract price from the option text (format: "ColorName - ₹123.45")
                const priceMatch = selectedText.match(/₹(\d+\.\d{2})$/);
                const price = priceMatch ? parseFloat(priceMatch[1]) : 0;

                // Alternative: Use the data-price attribute we stored
                // const price = selectedOption.data('price');

                $priceInput.val(price.toFixed(2)).data('evaluated', price);
                $priceInput.removeClass('is-invalid').addClass('is-valid');
            } else {
                // Clear all values if no item selected
                $priceInput.val('').data('evaluated', null);
                $this.closest('.row').find('.quantity-input').val('').data('evaluated', null);
                $this.closest('.row').find('.total-quantity').text('0.00');
                $this.closest('.row').find('.total-price').text('₹0.00');
                $priceInput.removeClass('is-valid is-invalid');
            }

            validateItem($newItem);
            calculateGrandTotal();
        });

            // Add event handlers
            $newItem.find('.calc-trigger').on('input change', function() {
                validateInput($(this));
                validateItem($newItem);
                calculateItemTotal($newItem);
                calculateGrandTotal();
            });

            $newItem.find('.is-validatable').on('change', function() {
                validateInput($(this));
                validateItem($newItem);
                calculateGrandTotal();
            });

            $newItem.find('.delete-item-btn').click(function() {
                $newItem.fadeOut(300, function() {
                    $(this).remove();
                    renumberItems();
                    validateAllItems();
                    calculateGrandTotal();
                });
            });

            validateItem($newItem);
        };

        // Helper Functions
        function validateInput($input) 
        {
            let isValid = false;
            let evaluatedValue = null;

            try {
                const value = $input.val().trim();
                if (!value) {
                    throw new Error('Empty input');
                }

                // For dropdowns, just check if something is selected
                if ($input.is('select')) {
                    isValid = value !== "";
                    $input.data('evaluated', value);
                }
                // For number inputs, evaluate mathematical expressions
                else {
                    evaluatedValue = math.evaluate(value);
                    if (typeof evaluatedValue !== 'number' || isNaN(evaluatedValue)) {
                        throw new Error('Invalid number');
                    }

                    const min = $input.hasClass('quantity-input') ? 1 : 0.01;
                    isValid = evaluatedValue >= min;
                    $input.data('evaluated', isValid ? evaluatedValue : null);
                }
            } catch (e) {
                isValid = false;
                evaluatedValue = null;
                $input.data('evaluated', null);
            }

            // Update validation classes and feedback messages
            $input.toggleClass('is-invalid', !isValid);
            $input.toggleClass('is-valid', isValid);
            $input.siblings('.invalid-feedback').toggle(!isValid);
            $input.siblings('.valid-feedback').toggle(isValid);
             toggleSubmitButtonState();

            return isValid ? evaluatedValue || $input.val() : false;
        }

        function calculateItemTotal($item) {
            const price = parseFloat($item.find('.price-input').data('evaluated')) || 0;
            const quantity = parseFloat($item.find('.quantity-input').data('evaluated')) || 0;
            const total = price * quantity;

            $item.find('.total-price').text(`₹${total.toFixed(2)}`);
            $item.find('.total-quantity').text(quantity.toFixed(2));

            return total;
        }

        function calculateGrandTotal() {
            let grandTotal = 0;
            let totalQuantity = 0;
            let ru = "₹"

            $('#materialsContainer .item-entry').each(function() {
                const $item = $(this);
                const itemTotal = calculateItemTotal($item);
                grandTotal += itemTotal;
                const quantity = parseFloat($item.find('.quantity-input').data('evaluated')) || 0;
                totalQuantity += quantity;
            });

            $('#totalValue').text( grandTotal.toFixed(2));
        }

        function renumberItems() {
            $('#materialsContainer .item-entry').each(function(index) {
                const newCount = index + 1;
                const $item = $(this);
                $item.attr('id', `item-${newCount}`)
                     .find('.badge').text(newCount)
                     .end()
                     .find('.item-dropdown').attr('id', `dropdown-${newCount}`);
            });
        }

        function validateItem($item) {
            let isValid = true;

            $item.find('[required]').each(function() {
                isValid = validateInput($(this)) !== false && isValid;
            });

            $item.attr('data-valid', isValid.toString());
             toggleSubmitButtonState();

            return isValid;
        }

        function validateAllItems() {
            let allValid = true;
            $('#materialsContainer .item-entry').each(function() {
                if (!validateItem($(this))) {
                    allValid = false;
                }
            });
             toggleSubmitButtonState();

            return allValid;
        }


         $('#isPaid').change(function() {
            const isValid = $(this).is(':checked');
            $(this).toggleClass('is-invalid', !isValid);
            $(this).toggleClass('is-valid', isValid);
            $(this).siblings('.invalid-feedback').toggle(!isValid);
            $(this).siblings('.valid-feedback').toggle(isValid);
               toggleSubmitButtonState();
        });


       // 3. Form submission handler
        $('#addBillForm').submit(function(e) {
            e.preventDefault();
          

        // Validate form first
        if (!validateAllItems() || !this.checkValidity()) {
            $(this).addClass('was-validated');
            return false;
        }

        const formData = new FormData();
        formData.append("BuyerName", $('#buyerName').val().trim());
        formData.append("IsPaid", $('#isPaid').is(':checked'));
        formData.append("PaymentMethod", $('#paymentMethod').val());
        // Append items
        $('#materialsContainer .item-entry').each(function(index) {
            const $item = $(this);
            formData.append(`Items[${index}].MaterialId`, $item.find('.item-dropdown').val());
            formData.append(`Items[${index}].Price`, parseFloat($item.find('.price-input').data('evaluated')) || 0);
            formData.append(`Items[${index}].Quantity`, parseFloat($item.find('.quantity-input').data('evaluated')) || 0);
        });

           console.log(formData);
      
            const BuyerName = formData.buyerName;
            const formControl = $('#buyerName').closest('.form-floating');
            const feedback = formControl.find('.valid-feedback, .invalid-feedback');

            // Correct jQuery way to remove classes
            $('#buyerName').removeClass('is-valid is-invalid');

            if(!BuyerName) {
                // Correct jQuery way to add class
                $('#buyerName').addClass('is-invalid');

                if (feedback.length === 0) {
                    formControl.append('<div class="invalid-feedback">Customer name is required</div>');
                } else {
                    feedback.text('Customer name is required')
                           .removeClass('valid-feedback')
                           .addClass('invalid-feedback');
                }
            } 
            else {
                // Add success state if valid
                $('#buyerName').addClass('is-valid');
                if (feedback.length === 0) {
                    formControl.append('<div class="valid-feedback">Looks good!</div>');
                } else {
                    feedback.text('Looks good!')
                           .removeClass('invalid-feedback')
                           .addClass('valid-feedback');
                }
            }
            $.ajax({
                url:'@Url.Action("CreateBill", "BuyerBilling")',
                type:"POST",
                data: formData,
                processData:false,
                contentType:false,
                success:function(response)
                { 
                     if(response.success)
                     {

                          $(addBillModal).hide();

                            showAlert("Buying bill Generated Successfully","success", 1900);

                                     setTimeout(() => { window.location.reload(); // $("#loader_").css("display","none");
                            
                                     },2000);
                     }
     
                },
                 error: function (xhr, status, error) {
                 // Corrected: Pass the type parameter directly
                 showAlert("An error occurred: " + error, "danger", 3000);
                           //$("#loader_").css("display","none");
             }

                 

            });
        
        });


        //4. Name change handler
        window.NameChange = function(input) 
        {

        const value = input.value.trim();
        const formControl = $(input).closest('.form-floating');
        const feedback = formControl.find('.valid-feedback, .invalid-feedback');

        // Clear previous validation classes
        input.classList.remove('is-valid', 'is-invalid');

        if (!value) 
        {
            // Empty field case
            input.classList.add('is-invalid');
            if (feedback.length === 0)
            {
                formControl.append('<div class="invalid-feedback">Customer name is required</div>');
            } 
            else 
            {
                feedback.text('Customer name is required').removeClass('valid-feedback').addClass('invalid-feedback');
            }
        } 
        else if (value.length < 3) 
        {
            // Minimum length check
            input.classList.add('is-invalid');
            if (feedback.length === 0) {
                formControl.append('<div class="invalid-feedback">Name must be at least 3 characters</div>');
            } else {
                feedback.text('Name must be at least 3 characters').removeClass('valid-feedback').addClass('invalid-feedback');
            }
        } 
        else if (!/^[a-zA-Z\u00C0-\u017F\s'-]+$/.test(value)) 
        {
            // Character validation (letters, accents, spaces, hyphens, apostrophes)
            input.classList.add('is-invalid');
            if (feedback.length === 0) {
                formControl.append('<div class="invalid-feedback">Only letters and basic punctuation allowed</div>');
            } else {
                feedback.text('Only letters and basic punctuation allowed').removeClass('valid-feedback').addClass('invalid-feedback');
            }
        } 
        else 
        {
            // Valid input
            input.classList.add('is-valid');
            if (feedback.length === 0) {
                formControl.append('<div class="valid-feedback">Looks good!</div>');
            } else {
                feedback.text('Looks good!').removeClass('invalid-feedback').addClass('valid-feedback');
            }
        }

        // Enable/disable submit button based on validity (optional)
        const form = $(input).closest('form');
        form.find('[type="submit"]').prop('disabled', form.find('.is-invalid').length > 0);
            };

        });

                       function toggleSubmitButtonState() {
            const isPaidChecked = $('#isPaid').is(':checked');
            const isValid = isPaidChecked;

            // Toggle validation UI
            $('#isPaid').toggleClass('is-valid', isValid);
            $('#isPaid').toggleClass('is-invalid', !isValid);

            // Show or hide feedback
            $('#isPaid').siblings('.invalid-feedback').toggle(!isValid);

            // Enable or disable submit button
            const hasInvalid = $('.is-invalid').length > 0;
            $('#addBillForm [type="submit"]').prop('disabled', hasInvalid);
        }

        function P_bill(B_Id)
         {
              const b_id = parseInt(B_Id, 10);
               window.location.href = `/BuyerBilling/PrintBill?b_id=${b_id}`

             
             
         }

    </script>       
            }       
    
<style>
    #isPaid{
        margin-left:0.5em
    }

    #buyerNameError 
    {
        margin-left: 14px;
    }

    .material-item {
        background-color: #f8f9fa;
        transition: box-shadow 0.3s ease;
    }

        .material-item:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .input-group-text {
        background-color: #e9ecef;
        border: 1px solid #ced4da;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        text-align: center;
        white-space: nowrap;
    }

    .delete-item-btn {
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .delete-item-btn:hover 
        {
            background-color: #dc3545;
            color: #fff;
        }

    .form-label {
        font-weight: 500;
        margin-bottom: 0.5rem;
        color: #495057;
    }

    .form-control, .form-select {
        border-radius: 0.375rem;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border: 1px solid #ced4da;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
        #totalAmount{
          padding-left:1rem;

        }

    .custom-large-checkbox {
        width: 1rem;
        height: 1rem;
        margin-top: 0;
        transform: scale(1.3);
    }

    .is-valid {
        border-color: #198754 !important;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") !important;
    }

    .invalid-feedback {
        display: block;
        margin-top: 0.25rem;
        font-size: 0.875em;
        color: #dc3545;
    }

    .bg-gradient-teal {
        background: linear-gradient(135deg, #20c997 0%, #0d6efd 100%);
    }
</style>