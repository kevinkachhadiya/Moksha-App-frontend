@model Moksha_App.Models.MaterialsListViewModel

@{
    // Check if TempData contains a success message
    var successMessage = TempData["Success"] as string;
    var deleteMessage = TempData["Delete"] as string;
    var modifyMessage = TempData["modify"] as string;
    ViewData["Title"] = "Material Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.body.appendChild(globalAlertContainer);
            showAlert("✅ @successMessage", "success");
        });
    </script>
}
@if (!string.IsNullOrEmpty(deleteMessage))
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.body.appendChild(globalAlertContainer);
            showAlert("❌ @deleteMessage", "danger");
        });
    </script>
}
@if (!string.IsNullOrEmpty(modifyMessage))
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.body.appendChild(globalAlertContainer);
            showAlert("⚠️ @modifyMessage", "warning");
        });
    </script>
}
@if (ViewBag.Error != null)
{
    <p style="color:red">@ViewBag.Error</p>
}
else
{
    <div class="m-3">
    <div class="">
        <div class=""></div>
        <div>
            <div class="d-flex flex-column">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div class="d-flex">
                        <div class="icon-container me-3">
                            <i class="bi bi-box-seam text-primary fs-3"></i>
                        </div>
                        <h2 class="text-primary fw-bold mb-0">Materials Management</h2>
                        </div>
                        <div class="d-flex gap-3">

                            <button class="btn btn-md btn-primary rounded-pill" data-bs-toggle="modal" data-bs-target="#addMaterialModal">
                                <i class="bi bi-plus-lg me-1"></i> Add Material
                            </button>
                        </div>
                    </div>
            </div>
        </div>
    </div>


        <div class="card shadow-sm border-0">
            <div class="card-body p-0">
                <form id="searchForm" method="get" asp-action="All_Materials">
                    <div class="d-flex flex-column flex-lg-row p-3 gap-2">
                        <!-- Search Field with Icon -->
                        <div class="search-wrapper flex-grow-1 position-relative">
                            <label for="searchInput" class="form-label text-muted small mb-1 d-sm-block">Search</label>
                            <div class="position-relative">
                                <!-- Search Icon -->
                                <i class="bi bi-search text-muted position-absolute ms-3" style="z-index: 2;margin-top: 10px;"></i>
                                <!-- Search Input -->
                                <input type="text"
                                       id="searchInput"
                                       name="searchTerm"
                                       class="form-control ps-5 pe-5 shadow-sm"
                                       placeholder="Search material by material name, amount.."
                                       value="@Context.Request.Query["searchTerm"]"
                                       style="height:48px">
                                @if (!string.IsNullOrEmpty(Context.Request.Query["searchTerm"]))
                                {
                                    <button type="button" class="btn btn-sm btn-light position-absolute top-50 end-0 translate-middle-y me-2 border-0" onclick="clearSearch()" id="clearButton">
                                        <i class="bi bi-x-circle"></i>
                                    </button>
                                }
                            </div>
                        </div>

                        <!-- Filters Group -->
                        <div class="filters-group d-flex flex-column flex-md-row align-items-stretch gap-2">
                            <!-- Sort By Dropdown -->
                            <div class="dropdown-wrapper position-relative">
                                <label for="sortColumn" class="form-label text-muted small mb-1 d-sm-block">Sort By</label>
                                <div class="select-container position-relative">
                                    <select id="sortColumn" name="sortColumn" class="form-select shadow-sm">
                                        <option value="ColorName" selected="@(Context.Request.Query["sortColumn"] == "ColorName")">Color Name</option>
                                        <option value="BasePrice" selected="@(Context.Request.Query["sortColumn"] == "BasePrice")">Base Price</option>
                                    </select>
                                </div>
                            </div>

                            <!-- Sort Direction Dropdown -->
                            <div class="dropdown-wrapper position-relative">
                                <label for="sortDirection" class="form-label text-muted small mb-1 d-sm-block">Order</label>
                                <div class="select-container position-relative">
                                    <select id="sortDirection" name="sortDirection" class="form-select shadow-sm">
                                        <option value="asc" selected="@(Context.Request.Query["sortDirection"] == "asc")">Ascending</option>
                                        <option value="desc" selected="@(Context.Request.Query["sortDirection"] == "desc")">Descending</option>
                                    </select>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-flex flex-row align-items-end justify-content-center gap-2 ">
                                <input type="hidden" name="page" id="page" value="@Context.Request.Query["page"]" />
                                <input type="hidden" name="pageSize" id="pageSize" value="@Context.Request.Query["pageSize"]" />

                                <button type="submit" class="btn btn-primary shadow-sm w-100 w-sm-auto">
                                    <i class="bi bi-filter me-1"></i>Apply
                                </button>
                                <a href="@Url.Action("All_Materials")" class="btn btn-outline-secondary shadow-sm w-100 w-sm-auto">
                                    <i class="bi bi-arrow-counterclockwise me-1"></i>Reset
                                </a>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>


     <div class="mt-4">
            <div class="card shadow-sm border-0 rounded-3">
                <!-- Header Section -->
                <div class="card-header bg-white py-2 align-items-center border-bottom">
                    <div class="d-flex align-items-center justify-content-between " style="width: -webkit-fill-available;">
                        <div class="d-flex">
                        <h5 class="mb-0 fw-bold me-3">Materials </h5>
                        <div class="badge rounded-pill bg-primary bg-opacity-10 text-primary px-3 py-2">
                            <span id="billCount">@(Model?.Materials.Count() ?? 0)</span> items
                        </div>
                        </div>
                        <div class="dropdown ">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle"
                                    type="button"
                                    id="pageSizeDropdown"
                                    data-bs-toggle="dropdown">
                                <i class="bi bi-list-ul me-1"></i><span id="currentPageSize">@Context.Request.Query["pageSize"]</span> Records
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="pageSizeDropdown">
                                <li><a class="dropdown-item" href="javascript:void(0)" onclick="changePageSize(5)">5 Records</a></li>
                                <li><a class="dropdown-item" href="javascript:void(0)" onclick="changePageSize(10)">10 Records</a></li>
                                <li><a class="dropdown-item" href="javascript:void(0)" onclick="changePageSize(50)">50 Records</a></li>
                                <li><a class="dropdown-item" href="javascript:void(0)" onclick="changePageSize(100)">100 Records</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="javascript:void(0)" onclick="changePageSize(0)">All Records</a></li>
                            </ul>
                        </div>
                    </div>
                   
                </div>

                <!-- Table Section -->
                <div class="card-body p-0">
                    <div class="table-wrapper" style="max-height: 400px; overflow-y: auto;">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-header bg-light position-sticky top-0" style="z-index: 10;">
                                <tr class="bg-light">
                                    <th scope="col" class="py-3 ps-4" width="5%">#</th>
                                    <th scope="col" class="py-3" width="45%">
                                        <a href="@Url.Action("All_Materials", new {
                                    searchTerm = Context.Request.Query["searchTerm"],
                                    sortColumn = "ColorName",
                                    page = Context.Request.Query["page"],
                                    pageSize = Context.Request.Query["pageSize"],
                                     sortDirection = Context.Request.Query["sortColumn"] == "ColorName" && Context.Request.Query["sortDirection"] == "asc" ? "desc" : "asc"
                                })" class="text-decoration-none text-dark d-flex align-items-center fw-medium fw-semibold">
                                            <span>Color Name</span>
                                            <div class="ms-2">
                                                @if (Context.Request.Query["sortColumn"] == "ColorName")
                                                {
                                                    <i class="bi @(Context.Request.Query["sortDirection"] == "asc" ? "bi-sort-up-alt" : "bi-sort-down-alt") text-primary"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-filter text-muted opacity-50"></i>
                                                }
                                            </div>
                                        </a>
                                    </th>
                                    <th scope="col" class="py-3" width="30%">
                                        <a href="@Url.Action("All_Materials", new {
                                    searchTerm = Context.Request.Query["searchTerm"],
                                    sortColumn = "BasePrice",
                                    page = Context.Request.Query["page"],
                                    pageSize = Context.Request.Query["pageSize"],
                                    sortDirection = Context.Request.Query["sortColumn"] == "BasePrice" && Context.Request.Query["sortDirection"] == "asc" ? "desc" : "asc"
                                })" class="text-decoration-none text-dark d-flex align-items-center fw-medium fw-semibold">
                                            <span>Base Price</span>
                                            <div class="ms-2">
                                                @if (Context.Request.Query["sortColumn"] == "BasePrice")
                                                {
                                                    <i class="bi @(Context.Request.Query["sortDirection"] == "asc" ? "bi-sort-up-alt" : "bi-sort-down-alt") text-primary"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-filter text-muted opacity-50"></i>
                                                }
                                            </div>
                                        </a>
                                    </th>
                                    <th scope="col" class="py-3 text-end pe-4 fw-medium fw-semibold " width="20%">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Materials.Any())
                                {
                                    int material_no = (Model.CurrentPage - 1) * Model.PageSize + 1;
                                    foreach (var material in Model.Materials)
                                    {
                                        <tr>
                                            <td class="ps-4">@material_no</td>
                                            <td class="fw-medium">@material.ColorName</td>
                                            <td class="text-success fw-semibold">₹@material.BasePrice.ToString("N2", System.Globalization.CultureInfo.InvariantCulture)</td>
                                            <td class="text-end pe-4">
                                                <div class="btn-group">
                                                    <button class="btn btn-outline-primary btn-sm details-btn"
                                                            data-id="@material.Id"
                                                            data-material-no="@material_no"
                                                            data-color="@material.ColorName"
                                                            data-base-price="@material.BasePrice">
                                                        <i class="bi bi-pencil me-1"></i> Edit
                                                    </button>
                                                    <button class="btn btn-outline-danger btn-sm delete-btn"
                                                            data-id="@material.Id"
                                                            data-bs-toggle="tooltip"
                                                            data-bs-title="Delete">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                        material_no++;
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4" class="text-center py-5">
                                            <div class="py-4">
                                                <i class="bi bi-inbox display-5 text-secondary"></i>
                                                <p class="text-muted mt-3 mb-3">No materials found in your library</p>
                                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMaterialModal">
                                                    <i class="bi bi-plus-circle me-2"></i> Add Your First Material
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination Section -->
                    <div class="card-footer bg-white py-3 border-top">
                        <div class="d-flex flex-column flex-md-row justify-content-between align-items-center gap-2">

                            <!-- Text Info -->
                            <div class="text-muted text-center text-md-start">
                                Showing <span class="fw-semibold">@(Model?.Materials.Count() ?? 0)</span> of <span class="fw-semibold">@(Model?.TotalItems ?? 0)</span> materials
                            </div>

                            <!-- Pagination -->
                            @if (Model?.TotalPages > 1)
                            {
                                <nav aria-label="Page navigation">
                                    <ul class="pagination pagination-sm mb-0 justify-content-center justify-content-md-end flex-wrap">
                                        <!-- First Page -->
                                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("All_Materials", new {
                            searchTerm = Context.Request.Query["searchTerm"],
                            sortColumn = Context.Request.Query["sortColumn"],
                            sortDirection = Context.Request.Query["sortDirection"],
                            page = 1,
                            pageSize = Context.Request.Query["pageSize"]
                        })" aria-label="First">
                                                <i class="bi bi-chevron-double-left"></i>
                                            </a>
                                        </li>

                                        <!-- Previous Page -->
                                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("All_Materials", new {
                            searchTerm = Context.Request.Query["searchTerm"],
                            sortColumn = Context.Request.Query["sortColumn"],
                            sortDirection = Context.Request.Query["sortDirection"],
                            page = Model.CurrentPage - 1,
                            pageSize = Context.Request.Query["pageSize"]
                        })" aria-label="Previous">
                                                <i class="bi bi-chevron-left"></i>
                                            </a>
                                        </li>

                                        @{
                                            int startPage = Math.Max(1, Model.CurrentPage - 2);
                                            int endPage = Math.Min(Model.TotalPages, startPage + 4);

                                            if (endPage - startPage < 4 && startPage > 1)
                                            {
                                                startPage = Math.Max(1, endPage - 4);
                                            }
                                        }

                                        @for (int i = startPage; i <= endPage; i++)
                                        {
                                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                                <a class="page-link" href="@Url.Action("All_Materials", new {
                                searchTerm = Context.Request.Query["searchTerm"],
                                sortColumn = Context.Request.Query["sortColumn"],
                                sortDirection = Context.Request.Query["sortDirection"],
                                page = i,
                                pageSize = Context.Request.Query["pageSize"]
                            })">@i</a>
                                            </li>
                                        }

                                        @if (endPage < Model.TotalPages)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Action("All_Materials", new {
                                searchTerm = Context.Request.Query["searchTerm"],
                                sortColumn = Context.Request.Query["sortColumn"],
                                sortDirection = Context.Request.Query["sortDirection"],
                                page = Model.TotalPages,
                                pageSize = Context.Request.Query["pageSize"]
                            })">@Model.TotalPages</a>
                                            </li>
                                        }

                                        <!-- Next Page -->
                                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("All_Materials", new {
                            searchTerm = Context.Request.Query["searchTerm"],
                            sortColumn = Context.Request.Query["sortColumn"],
                            sortDirection = Context.Request.Query["sortDirection"],
                            page = Model.CurrentPage + 1,
                            pageSize = Context.Request.Query["pageSize"]
                        })" aria-label="Next">
                                                <i class="bi bi-chevron-right"></i>
                                            </a>
                                        </li>

                                        <!-- Last Page -->
                                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("All_Materials", new {
                            searchTerm = Context.Request.Query["searchTerm"],
                            sortColumn = Context.Request.Query["sortColumn"],
                            sortDirection = Context.Request.Query["sortDirection"],
                            page = Model.TotalPages,
                            pageSize = Context.Request.Query["pageSize"]
                        })" aria-label="Last">
                                                <i class="bi bi-chevron-double-right"></i>
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
 
</div>

    <!-- Enhanced Modify Material Modal -->
    <div class="modal fade" id="modifyModal" tabindex="-1" aria-labelledby="modifyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <!-- Modal Header -->
                <div class="modal-header border-bottom">
                    <h5 class="modal-title fw-bold text-primary" id="modifyModalLabel">
                        <i class="bi bi-pencil-square me-2"></i>Edit Material
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body px-4 py-4">
                    <form id="modifyMaterialForm" novalidate>
                        <!-- Material Number (Read-only) -->
                        <div class="mb-3 row align-items-center">
                            <label for="materialNo" class="col-sm-4 col-form-label">Material Number</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control-plaintext fw-semibold" id="materialNo" readonly>
                            </div>
                        </div>

                        <!-- Color Name -->
                        <div class="mb-3">
                            <label for="colorName" class="form-label">Color Name <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-palette"></i>
                                </span>
                                <input type="text" class="form-control" id="colorName" placeholder="Enter Material name" required>
                            </div>
                            <div class="form-text small">Use standard color names (e.g., Crimson, Navy Blue, Forest Green)</div>
                        </div>

                        <!-- Base Price -->
                        <div class="mb-4">
                            <label for="basePrice" class="form-label">Base Price <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">₹</span>
                                <input type="number" class="form-control" id="basePrice" placeholder="0.00" step="0.01" min="0" required>
                            </div>
                            <div class="form-text small">Price per unit in your local currency</div>
                        </div>

                        <!-- Hidden ID field for form submission -->
                        <input type="hidden" id="materialId">

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-end gap-2 pt-2">
                            <button type="button" class="btn btn-outline-secondary px-3" data-bs-dismiss="modal">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="bi bi-check2 me-1"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Optimized Confirm Deletion Modal -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <!-- Modal Header -->
                <div class="modal-header border-0 pb-0">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body text-center px-4 pt-0 pb-4">
                    <div class="mb-3">
                        <span class="badge rounded-circle bg-danger p-3 mb-3">
                            <i class="bi bi-exclamation-triangle-fill fs-4"></i>
                        </span>
                        <h5 class="modal-title fw-bold mb-3" id="deleteConfirmModalLabel">Delete Material</h5>
                    </div>

                    <p class="text-dark mb-1">Are you sure you want to delete this material?</p>
                    <p class="text-muted small mb-4">This action cannot be undone.</p>

                    <div class="d-flex justify-content-center gap-2 pt-2">
                        <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="button" class="btn btn-danger px-4" id="confirmDeleteBtn">
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Optimized Add Material Modal -->
    <div class="modal fade" id="addMaterialModal" tabindex="-1" aria-labelledby="addMaterialModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <!-- Modal Header -->
                <div class="modal-header border-bottom">
                    <h5 class="modal-title fw-bold text-primary" id="addMaterialModalLabel">
                        <i class="bi bi-plus-circle me-2"></i>Add New Material
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body px-4 py-4">
                    <form id="addMaterialForm" method="post" action="@Url.Action("Create", "Materials")" novalidate>
                        <!-- Color Name Field -->
                        <div class="mb-4">
                            <label for="ColorName" class="form-label">Color Name <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-palette"></i>
                                </span>
                                <input type="text" class="form-control" id="ColorName" name="ColorName" placeholder="Enter Material name" required>
                            </div>
                            <div class="form-text small">Use standard color names (e.g., Crimson, Navy Blue, Forest Green)</div>
                        </div>

                        <!-- Base Price Field -->
                        <div class="mb-4">
                            <label for="BasePrice" class="form-label">Base Price <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">₹</span>
                                <input type="number" class="form-control" id="BasePrice" name="BasePrice" placeholder="0.00" min="0" step="0.01" required>
                            </div>
                            <div class="form-text small">Price per unit in Indian Rupees</div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-end gap-2 pt-2">
                            <button type="button" class="btn btn-outline-secondary px-3" data-bs-dismiss="modal">
                                Cancel
                            </button>
                            <button type="submit" form="addMaterialForm" class="btn btn-primary px-4">
                                <i class="bi bi-check2 me-1"></i> Save Material
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/js/Material.js"></script>
<link rel="stylesheet" href="~/css/materials.css">

<script>
     function clearSearch() {
        document.querySelector('input[name="searchTerm"]').value = '';
        document.getElementById('searchForm').submit();
    }

     function changePageSize(size) {
    // Get current URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    
    // Update the pageSize parameter
    urlParams.set('pageSize', size);
    
    // Reset to first page when changing page size
    urlParams.set('page', 1);
    
    // Update the displayed size in the dropdown button
    document.getElementById('currentPageSize').textContent = size > 0 ? size : 'All';
    
    // Redirect to the same page with updated parameters
    window.location.href = window.location.pathname + '?' + urlParams.toString();
}


</script>
<style>
    /* ===================== */
    /* LAYOUT & CONTAINERS */
    /* ===================== */
    .header-container {
        position: relative;
        margin-bottom: 1.5rem;
    }

    .table-container {
        border-radius: 0.75rem;
        overflow: hidden;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        background-color: white;
    }

    .card {
        border: none;
        border-radius: 0.75rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .card:hover {
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

    .card-header {
        background-color: var(--bg-light);
        border-bottom: 1px solid var(--border);
        padding: 1.25rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .accent-bar {
        height: 4px;
        background: linear-gradient(90deg, var(--primary) 0%, var(--primary-dark) 100%);
        border-radius: 3px 3px 0 0;
    }

    /* ===================== */
    /* NAVIGATION & BREADCRUMBS */
    /* ===================== */
    .breadcrumb-nav {
        margin-left: 3.75rem;
    }

    .breadcrumb {
        font-size: 0.85rem;
        background-color: transparent;
        padding: 0.5rem 0;
        margin-bottom: 0;
    }

    .breadcrumb-item a {
        color: var(--text-secondary);
        text-decoration: none;
        transition: color 0.2s ease;
    }

        .breadcrumb-item a:hover {
            color: var(--primary);
        }

    .breadcrumb-item.active {
        color: var(--primary-dark);
        font-weight: 500;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        content: "•";
        color: var(--text-secondary);
        padding: 0 0.5rem;
    }

    /* ===================== */
    /* BUTTONS & ACTIONS */
    /* ===================== */
    .action-btn {
        transition: all 0.2s ease;
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
    }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .add-bill-btn {
        background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 1.25rem;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .add-bill-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
        }

        .add-bill-btn i {
            font-size: 1.125rem;
            margin-right: 0.5rem;
        }

    /* ===================== */
    /* SEARCH & FILTERS */
    /* ===================== */
    .search-filter-container {
        background-color: white;
        border-radius: 0.75rem;
        padding: 1rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }

    .search-wrapper {
        position: relative;
    }

    .search-input {
        height: 3rem;
        border-radius: 0.5rem;
        padding-left: 3rem;
        border: 1px solid var(--border);
        transition: all 0.3s ease;
        width: 100%;
    }

        .search-input:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.15);
        }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-secondary);
    }

    .btn-clear {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        background: transparent;
        border: none;
        color: var(--text-secondary);
        transition: color 0.2s ease;
    }

        .btn-clear:hover {
            color: var(--error);
        }

    .select-container {
        position: relative;
    }

    .form-select {
        appearance: none;
        height: 3rem;
        padding-right: 2.5rem;
        border-radius: 0.5rem;
        min-width: 10rem;
        border: 1px solid var(--border);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%234a5568' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 16px 12px;
    }

    .action-buttons .btn {
        height: 3rem;
        border-radius: 0.5rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0 1.25rem;
        font-weight: 500;
    }

    .action-buttons .btn-primary {
        background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
        border: none;
        color: white;
    }

        .action-buttons .btn-primary:hover {
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
        }

    .advanced-filters {
        background-color: var(--bg-light);
        border-radius: 0.5rem;
        padding: 1rem;
        margin-top: 1rem;
    }

    /* ===================== */
    /* TABLES */
    /* ===================== */
    .table-wrapper {
        height: 400px;
        overflow-y: auto;
        border-radius: 0.75rem;
    }

        .table-wrapper::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        .table-wrapper::-webkit-scrollbar-track {
            background: var(--bg-light);
        }

        .table-wrapper::-webkit-scrollbar-thumb {
            background: var(--border);
            border-radius: 4px;
        }

    .table thead th {
        position: sticky;
        top: 0;
        background-color: var(--bg-light);
        color: var(--text-primary);
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
        z-index: 10;
        padding: 1rem;
        border-bottom: 2px solid var(--border);
    }

    .table tbody td {
        padding: 0.75rem 1rem;
        vertical-align: middle;
        border-bottom: 1px solid var(--border);
        color: var(--text-secondary);
    }

    .table tbody tr:hover {
        background-color: var(--primary-light);
    }

    /* ===================== */
    /* GRID LAYOUT */
    /* ===================== */
    .responsive-grid {
        display: grid;
        grid-auto-flow: row;
        gap: 0.5rem;
    }

    @@media (min-width: 768px) {
        .responsive-grid

    {
        grid-auto-flow: column;
        align-items: center;
    }

    }

    /* ===================== */
    /* ICONS & VISUALS */
    /* ===================== */
    .icon-container {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 3rem;
        height: 3rem;
        background-color: rgba(67, 97, 238, 0.1);
        border-radius: 0.75rem;
        color: var(--primary);
    }

        .icon-container i {
            font-size: 1.375rem;
        }

    /* ===================== */
    /* RESPONSIVE ADJUSTMENTS */
    /* ===================== */
    @@media (max-width: 992px) {
        .filters-group

    {
        margin-top: 1rem;
    }

    .breadcrumb-nav {
        margin-left: 0;
        margin-top: 1rem;
    }

    }
</style>